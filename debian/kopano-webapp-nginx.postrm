#!/bin/sh
# postrm script for kopano-webapp-nginx
#
# see: dh_installdeb(1)

set -e
#set -x # uncomment for verbose output

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

NGINX_SITES_AVAILABLE="/etc/nginx/sites-available"
NGINX_SITES_ENABLED="/etc/nginx/sites-enabled"

case "$1" in
    remove|purge)
        if [ -L "${NGINX_SITES_ENABLED}/kopano-webapp.conf" ]; then
            echo "[kopano-webapp-nginx] Disable kopano-webapp-nginx site config ..." >&2
            rm ${NGINX_SITES_ENABLED}/kopano-webapp.conf || true
            if [ -x /etc/init.d/nginx ]; then
                if [ -s /run/nginx.pid ] && pidof /usr/sbin/nginx >/dev/null; then
                    echo "[kopano-webapp-nginx] Triggering reload of Nginx config ..."
                    invoke-rc.d nginx reload || true
                fi
            fi
        fi
        # We don't do any disabling of modules, we don't know if they used else where.
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

exit 0
